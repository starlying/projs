import * as models from '../../api/models'import * as lang from '../../lib/lang'export enum EPayloadSource {  SERVER_ACTION,  VIEW_ACTION,}export enum EActionType {  NONE,  SERVER_VALIDATE,  SERVER_USER_UPDATE,  VIEW_OPEN_WINDOW,  VIEW_OPEN_MAIN,  VIEW_OPEN_MENU,  VIEW_WINDOW_ALERT,  VIEW_MAIN_CLICK,  VIEW_READY,}export enum EClickSource {  WINDOWS,  MAIN}export enum EMainType {  NONE,  EDIT,  LIST,  VIEW,  DASHBOARD_ACCOUNT,  DASHBOARD_CREATE,  DASHBOARD_LIST}export enum EWindowType {  NONE,  FORM}export enum EMenuType {  NONE,  COMPONENT,  SECTION,  PAGE,  FILE}export class DataInfo {  constructor(public attributeName: string, public attributeValue: string, public dataType: string, public required: boolean, public displayName: string, public tips?: string, public placeholder?: string) { }}export class ActionInfo {  constructor(public actionType: EActionType, public translateInfo?: Object, public serverJSON?: Object) { }}export class PayloadInfo {  constructor(public source: EPayloadSource, public action: ActionInfo) { }}export class FormInfo {  constructor(public formName: string, public isRequired: boolean) { }}export class PairInfo {  constructor(public name: string, public value: string) { }}export class StateInfo {  ready: boolean  actionType: EActionType  windowType: EWindowType  windowProps: Object  windowAlert: models.Alert  mainType: EMainType  mainProps: Object  menuType: EMenuType  menuProps: any  user: models.User  username: string  constructor() {    this.actionType = EActionType.NONE    this.windowType = EWindowType.NONE    this.mainType = EMainType.NONE    this.menuType = EMenuType.NONE    this.windowProps = null    this.windowAlert = null    this.mainProps = null    this.menuProps = null    this.user = new models.User()    this.username = ''  }}export interface IStateProps {  stateInfo: StateInfo}export interface IDesktop {  stateInfo: StateInfo;  ready: boolean;  localApps: Array<models.App>;  cloudApps: Array<models.App>;}export interface IDataProps {  key: string  ref: string  attributeName: string  attributeValue: string  required: boolean  displayName: string  tips: string  placeholder: string  onChange: Function}export function getDataProps(attributeName: string, attributeValue: string, required: boolean, displayName: string, tips: string, placeholder: string, onChange: Function): IDataProps {  return {    key: attributeName,    ref: attributeName,    attributeName: attributeName,    attributeValue: attributeValue,    required: required,    displayName: displayName,    tips: tips,    placeholder: placeholder,    onChange: onChange  }}